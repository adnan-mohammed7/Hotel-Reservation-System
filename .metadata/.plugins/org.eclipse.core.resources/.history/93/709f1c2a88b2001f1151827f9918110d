package application.controllers;

import java.util.List;

import application.database.Database;
import application.models.Guest;
import application.utility.Validate;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.embed.swt.FXCanvas;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TableColumn;
import javafx.scene.control.TableView;
import javafx.scene.control.TextField;
import javafx.scene.layout.BorderPane;
import javafx.stage.Stage;

public class CustomerSearchController {

    @FXML
    private TableView<Guest> customerTable;

    @FXML
    private TableColumn<Guest, String> emailCol;

    @FXML
    private Button mainMenuBtn;

    @FXML
    private TableColumn<Guest, String> nameCol;

    @FXML
    private Label numOfCustomersLabel;

    @FXML
    private TextField searchBox;

    @FXML
    private TableColumn<Guest, Long> phoneCol;

    @FXML
    private Button searchBtn;
    
    long phoneNum = 0;
    Database db;
    ObservableList<Guest> allCustomers;
    
    @FXML
    void initialize() {
    	db = new Database();
    	allCustomers = FXCollections.observableArrayList();
    }

    @FXML
    void navigateToMainMenu(ActionEvent event) {
    	try {
    		BorderPane root = (BorderPane)FXMLLoader.load(getClass().getResource("/application/views/AdminPage.fxml"));
    		Scene scene = new Scene(root);
    		Stage stage = (Stage) (mainMenuBtn.getScene().getWindow());
    		stage.close();
        	stage.setScene(scene);
        	stage.setMaximized(true);
        	stage.setResizable(false);
            stage.show();
    	}catch(Exception e) {
    		e.printStackTrace();
    	}
    }

    @FXML
    void searchBookings(ActionEvent event) {
    	if(validateFields()) {
    		allCustomers.addAll(db.getGuestsByNameOrPhone(searchBox.getText().toString()));
    	}

    }
    
    boolean validateFields() {
    	if(searchBox.getText().isEmpty()) {
    		Validate.showAlert("Phone/Name field cannot be empty");
    		return false;
    	}
    	return true;
    }
}
