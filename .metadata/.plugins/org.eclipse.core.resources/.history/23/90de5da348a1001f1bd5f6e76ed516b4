package application.models;

import java.time.temporal.ChronoUnit;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.concurrent.atomic.AtomicInteger;

public class Reservation {
	static final AtomicInteger counter = new AtomicInteger(0);
	int reservationID;
	Guest guest;
	List<Room> rooms;
	int numOfRooms;
	int numOfDays;
	String typesOfRooms;
	Date bookingDate;
	Date checkInDate;
	Date checkOutDate;
	Bill bill;
	double discount;
	
	public Reservation() {
		this.reservationID = counter.incrementAndGet();
		rooms = new ArrayList<>();
		bill = new Bill();
	}
	
	public Reservation(Guest guest, Room[] rooms, double dis) {
		this.reservationID = counter.incrementAndGet();
		this.guest = guest;
		this.rooms = new ArrayList<>(Arrays.asList(rooms));
		this.discount = dis;
		bill = new Bill(calculateRate(), calculateDays(), discount);
	}
	
	int calculateDays() { 
		return 0;
	}
	
	double calculateRate() {
		double total = 0.0;
		for (Room e : rooms) {
			total += e.getRate();
		}
		return total;
	}
	
	void calculateDays() {
		
	}
}
